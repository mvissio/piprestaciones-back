@model PiPiPrestaciones.Models.Aplicacion

@{
    ViewBag.Title = "Edit";
}

<h4>Edit</h4>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.AplicacionId);

    <div class="row">
        <div class="col s3">
            @foreach (var item in Model.Menus)
            {

                <a class="btn btn-edit col s12"
                   data-type="@item.Type"
                   style="background-color:@item.CssModelItemMenu.ColorBack;
                          color:@item.CssModelItemMenu.ColorText; "
                   id="@item.Type+@item.MenuId">
                    <i class="@item.Icon left"></i>@item.Type
                </a>


            }

        </div>

        <div id="menu-edit" class="col s9">



        </div>

    </div>
       

   

   


    @*<div class="form-horizontal">
        <h4>Aplicacion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AplicacionId)

        <div class="form-group">
            @Html.LabelFor(model => model.VersionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VersionId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VersionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastModification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastModification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastModification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>*@
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/colorpicker/js")
    @Styles.Render("~/bundles/colorpicker/css")
}


<style>
    .btn-edit {
    height: 100%;
    border-radius:1em;
    margin-bottom:1em;
    }
    #menu-edit{
       position:relative;

    }

</style>

<script>
    $(document).ready(function () {
        $(".btn-edit").click(function () {
            var type = $(this).attr("data-type");
            var data = { "type": type };

            $.ajax({
            url: '@Url.Action("GetEditMenu", "Aplicaciones")',
            cache: false,
            data:data,
            success: function (html) { $("#menu-edit").html(html); }
             });
        });

    });

</script>