@model PiPiPrestaciones.Models.AplicacionCreateView

@{
    ViewBag.Title = "Incorporar Aplicación";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4 class="tabs-title">Incorporar Aplicación</h4>
        <hr />


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col s12">
                <ul class="tabs">
                    <li class="tab col s3"><a class="active" href="#test1">Configuración general</a></li>
                    <li class="tab col s3"><a  href="#test2">Test 2</a></li>
                    <li class="tab col s3 disabled"><a href="#test3">Disabled Tab</a></li>
                    <li class="tab col s3"><a href="#test4">Test 4</a></li>
                </ul>
            </div>
            <div id="test1" class="col s12 ">
                <h4 class="tabs-title">Configuración general</h4>

                @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })


                @Html.CheckBoxFor(model => model.AppIndependiente, htmlAttributes: new { @class = "form-control" })
                @*@Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })*@

                <select>
                    <option value="Español">Español</option>
                    <option value="Inglés">Inglés</option>
                    <option value="Portugues">Portugués</option>
                </select>
                @Html.HiddenFor(model=>model.Idioma)

                @Html.CheckBoxFor(model => model.LenguajePorDefecto, htmlAttributes: new { @class = "form-control" })
                @*@Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })*@

                @Html.LabelFor(model => model.ClaveApp, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ClaveApp, new { htmlAttributes = new { @class = "form-control" } })

                @Html.LabelFor(model => model.AdminUser, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.AdminUser, new { htmlAttributes = new { @class = "form-control" } })

                @Html.LabelFor(model => model.AdminPasword, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.AdminPasword, new { htmlAttributes = new { @class = "form-control" } })

                @Html.LabelFor(model => model.ApiKey, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ApiKey, new { htmlAttributes = new { @class = "form-control" } })

                @Html.LabelFor(model => model.Canal, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Canal, new { htmlAttributes = new { @class = "form-control" } })

            
            </div>
            <div id="test2" class="col s12">Test 2</div>
            <div id="test3" class="col s12">Test 3</div>
            <div id="test4" class="col s12">Test 4</div>
        </div>

        


       

       @*<div class="row">
           <div class="col s6">





               @Html.LabelFor(model => model.NombreAplicacion, htmlAttributes: new { @class = "control-label col-md-2" })
               @Html.EditorFor(model => model.NombreAplicacion, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.NombreAplicacion, "", new { @class = "text-danger" })
           </div>

       </div>*@
        
        



        @*<div class="form-group">
            @Html.LabelFor(model => model.VersionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VersionId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VersionId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.LastModification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastModification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastModification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="waves-effect btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(document).ready(function () {


        

    });
  

</script>