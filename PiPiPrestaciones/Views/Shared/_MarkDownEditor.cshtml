

 
<div id="editormd" class="col l12">
    @*<div class="col l3 " id="box-aligment">
        <a id="al-left" data-al="left" class=" white alignment "><i class="fa fa-align-center small blue-grey-text"></i></a>
        <a id="al-mid" data-al="center" class=" white alignment"><i class="material-icons small blue-grey-text">format_align_center</i></a>
        <a id="al-right" data-al="right" class=" white alignment"><i class="material-icons small blue-grey-text">format_align_right</i></a>
        <div class="col l3">
         
        </div>
        <div class="col l3">
        
        </div>
        <div class="col l3">
          
        </div>
    </div>*@


    <textarea id="editor-md" class="col l12" style="display:none;">### Hello Editor.md !</textarea>
</div>




<style>
    .alignment {
        padding-top:1em;
        cursor:pointer;
    }
    #dropZone {
        /*border-radius: 5px;
        border: 2px solid #ccc;
        background-color: #eee;
        width: 250px;
        padding: 50px 0;
        text-align: center;
        font-size: 18px;
        color: #555;*/
        /*margin: 50px auto;*/
        /*margin:50px;*/
    }
    #editor-md {
   position:relative;

    }
    #dropZone.hover {
        /*border-color: #aaa;
            background-color: #ddd;*/
    }

        #dropZone.error {
            border-color: #f00;
            background-color: #faa;
        }

    #box-aligment {
        position: absolute;
        top: 0px;
        right: -8em;
        z-index: 100;
    }
</style>

@Styles.Render("~/bundles/markdown/css")


@Scripts.Render("~/bundles/markdown/js")

<script type="text/javascript">
    var alinearContenido = function (align) {

        $(".editormd-preview-container").css("text-align", align);
        $(".editormd-preview-container p").css("text-align", align);
        $(".CodeMirror-scroll").css("text-align", align);
        $("#alineacion").html(align)
    }

    $(document).ready(function () {
        //var simplemde = new SimpleMDE({
        //    element: document.getElementById("myMDE")
        //});


        var editor = editormd("editormd", {
            width: "90%",
            height: "50em",
            path: "../../lib/",
            watch: false,
            toolbarIcons: function () {
                // Or return editormd.toolbarModes[name]; // full, simple, mini
                // Using "||" set icons align right.
                return ["undo", "redo", "|", "bold", "hr", "|", "watch", "preview", "|", "h1", "h2", "h3", "h4", "h5", "h6", "|", "left", "center","right"]
            },
            toolbarCustomIcons: {
                left: "<li id='al-left' data-al='left' class=' white '><i data-al='left' onclick='alinearContenido(\"left\")'  class='fa fa-align-left small '></i></li>",
                 //left: "<i class='fa fa-star' onclick='alert()'></i>",
                center: "<li id='al-center' data-al='center' class=' white  '><i onclick='alinearContenido(\"center\")' class='fa fa-align-center small '></i></li>",
                right: "<li id='al-right' data-al='right' class=' white alignment'><i onclick='alinearContenido(\"right\")' class='fa fa-align-right small '></i></li>"
        },
            saveHTMLToTextarea: true // Autoload modules mode, codemirror, marked... dependents libs path
        });

    

       

        $(".alignment").click(function () {
            debugger;
            var al = $(this);
            al.removeClass("darken-4");
            al.addClass("darken-1");
            var id = al.attr("id");
            $(".editormd-preview-container").css("text-align", al.attr("data-al"));
            $(".editormd-preview-container p").css("text-align", al.attr("data-al"));



            $(".CodeMirror-scroll").css("text-align", al.attr("data-al"));



            //$("#box-aligment a").each(function () {

            //    if ($(this).attr("id") != id) {
            //        $(this).removeClass("darken-1");
            //      $(this).addClass("darken-4");
            //    }


            //});



        });

         var dropZone;
         var Reload;
        // Initializes the dropZone
        $(document).ready(function () {
            dropZone = $('#editormd');
            //dropZone.removeClass('error');
            Reload = function (id) {

                 @*$("#_Documentos").load('@Url.Action("ListDocumentos","Documentos")' + '?ContratoId=' + id);*@
            }


            // Check if window.FileReader exists to make
            // sure the browser supports file uploads
            if (typeof(window.FileReader) == 'undefined') {
                dropZone.text('Browser Not Supported!');
                dropZone.addClass('error');
                return;
            }

            // Add a nice drag effect
            dropZone[0].ondragover = function () {
                dropZone.addClass('hover');
                return false;
            };

            // Remove the drag effect when stopping our drag
            dropZone[0].ondragend = function () {
                dropZone.removeClass('hover');
                return false;
            };




            // The drop event handles the file sending
            dropZone[0].ondrop = function(event) {
                // Stop the browser from opening the file in the window
                event.preventDefault();
                dropZone.removeClass('hover');

                // Get the file and the file reader
                var file = event.dataTransfer.files[0];

               @* if(file.size > @maxRequestLength {
                            dropZone.text('File Too Large!');
                        dropZone.addClass('error');
                        return false;*@
            //    // Validate file size
            //    if(file.size > <%=maxRequestLength%>) {
            //        dropZone.text('File Too Large!');
            //    dropZone.addClass('error');
            //    return false;
            //}

            // Send the file

            var xhr = new XMLHttpRequest();
        //    xhr.upload.addEventListener('progress', uploadProgress, false);
            xhr.onreadystatechange = stateChange;
            xhr.open('POST','@Url.Action("HandleFileUpload","Images")', true);
            xhr.setRequestHeader('X-FILE-NAME', file.name);

            xhr.send(file);

            };




        });

        // Show the upload progress
        function uploadProgress(event) {
            var percent = parseInt(event.loaded / event.total * 100);
            $('#dropZone').text('Subiendo: ' + percent + '%');
        }

        // Show upload complete or upload failed depending on result
        function stateChange(event) {
            if (event.target.readyState == 4) {
                if (event.target.status == 200) {

                    //var xhr = event.target.xhr;
                    var response = $.parseJSON(this.responseText);

                    var path = response.path
                   // ![](http://)
                    var mdeVal = editor.getMarkdown();  


                    editor.setMarkdown(mdeVal + "\n" + "![](" + path + ")")
                    //const $codemirror = $('.CodeMirror').nextAll('textarea');
                    //$codemirror.val("[](http://"+ path +")");
                    $(".editormd-preview-container img").removeAttr("class");
                    $(".editormd-preview-container img").addClass("col");
                    $(".editormd-preview-container img").addClass("l12"); 

                    Materialize.toast('Archivo subido exitósamente!' + '<br />' + response.path, 4000)

                }
                else {
                    dropZone.text('Ocurrio un fallo al subir el archivo!');
                    dropZone.addClass('error');
                }
            }
        }








    });



        //window.onload = fun;
        //function fun() {
        //    $.post("Home/handleFileUpload", {}, function (response) {
        //        alert("hi");
        //    })



</script>