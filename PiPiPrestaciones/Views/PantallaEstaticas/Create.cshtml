@model PiPiPrestaciones.Models.PantallaEstatica

@{
    ViewBag.Title = "Create";
}

<h4>PantallaEstatica</h4>
<hr />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    

    <div id="ion-icons" class="row">
        <div class="col s6 ">
            <div class="row">
                <div class="input-field col s6">
                    @Html.LabelFor(model => model.Titulo)
                    @Html.EditorFor(model => model.Titulo)
                </div>
               <div class=" input-field col s6 ">
                  <div class="col s8">
                      @Html.LabelFor(model => model.BackGroundColor)
                      @Html.EditorFor(model => model.BackGroundColor)
                  </div>
                
                   @*<input id="mycp" type="text" class="input-field" />
                   <label for="first_name">First Name</label>*@
                  <div class="col s4">
                      <div class="btn-floating" id="seleccion-color"></div>
                  </div>
                
                   
               </div>
            </div>
            @Html.HiddenFor(model => model.Icono)

            @*<div class="row">
                <div class="col s1 ">
                   <a class="btn-floating  light-blue white-text"><i id="icono-seleccionado"></i></a>
                </div>
               <div class="col s9">
                   <label class="lb-icon-sel control-label">Icono seleccionado </label>
               </div>
                
                <div class="col s1 right"><a class=" blue-grey btn-floating "><i id="eliminar-icon" class="tiny material-icons">close</i></a></div>
            </div>*@


            @Html.Partial("_SelectorIonIcons")
        </div>
       

    </div>

    <div class="row" >
        <textarea name="text" id="myCd" ></textarea>

        @*<div>
            @Html.Partial("_UploadImage")
        </div>*@

    </div>
    <div class="form-horizontal">
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<link rel="stylesheet" href="http://lab.lepture.com/editor/editor.css" />
<script type="text/javascript" src="http://lab.lepture.com/editor/editor.js"></script>
<script type="text/javascript" src="http://lab.lepture.com/editor/marked.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/colorpicker/js")
@*@Scripts.Render("~/bundles/ace/js")
@Scripts.Render("~/bundles/markdown/js")*@

@Styles.Render("~/bundles/colorpicker/css")
@*@Styles.Render("~/bundles/markdown/css")*@

}

<style>
    #ion-icons {
        position:relative;
       
        /*height: 25em;
        overflow: scroll;*/
    }

    #icono-seleccionado {
    font-size: 32px;
    margin-right:1em;
    }

    .lb-icon-sel {
        /*font-size:14px;*/
        margin-left: 2em;
    }
    #seleccion-color {
    background-color:white;
    
    }
    .fa fa-picture-o  {
        display:none;
    }
    
    #BackGroundColor {
        cursor: pointer;
    }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css">
<script src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script>


<script>
    $(document).ready(function () {

        var simplemde = new SimpleMDE({
            element: document.getElementById("myCd")
        });

        function drawImage(editor) {
            var cm = editor.codemirror;
            var stat = getState(cm);
            alert("Hola")
            _replaceSelection(cm, stat.image, '![', '](http://)');
        }

        //$(".fa-picture-o").click(function () {
        //    //alert("SSDsd")
        //})
        $(".icon-ionic").click(function () {
            var icon = $(this);
            var iconClass = icon.attr("class").split(" ")
            //icon.removeClass("col");
            //icon.removeClass("s3");
            //icon.removeClass("icon-ionic");

            $("#Icono").val(iconClass[3]);
            var iconSel = $("#icono-seleccionado")
            iconSel.removeAttr("class")

            iconSel.addClass(iconClass[3]);


        });

        $(".icon-ionic").hover(function () {
            $(this).css("cursor", "pointer")
            var icon = $(this).attr('data-tags');
            $(this).attr('title', icon)
            $(this).attr('data-toggle', 'tooltip')
            //$(this).tooltip();
            //var iconClass = icon.attr("class").split(" ")
            //icon.removeClass("col");
            //icon.removeClass("s3");
            //icon.removeClass("icon-ionic");

            //alert(iconClass[3])

        })



        $("#eliminar-icon").click(function () {
            var iconSel = $("#icono-seleccionado")
            $("#Icono").val("");
            iconSel.removeAttr("class")

        });

        $('#BackGroundColor').colorpicker();

        $("#BackGroundColor").on("change", function () {

            debugger;
            var backGround = $(this).val()
            $("#seleccion-color").css("background-color", backGround);

        });

        $("#seleccion-color").click(function () {
            $('#BackGroundColor').focus();
        });



         var dropZone;
         var Reload;
        // Initializes the dropZone
        $(document).ready(function () {
            dropZone = $('.CodeMirror');
            //dropZone.removeClass('error');
            Reload = function (id) {

                 @*$("#_Documentos").load('@Url.Action("ListDocumentos","Documentos")' + '?ContratoId=' + id);*@
            }






            // Check if window.FileReader exists to make
            // sure the browser supports file uploads
            if (typeof(window.FileReader) == 'undefined') {
                dropZone.text('Browser Not Supported!');
                dropZone.addClass('error');
                return;
            }

            // Add a nice drag effect
            dropZone[0].ondragover = function () {
                dropZone.addClass('hover');
                return false;
            };

            // Remove the drag effect when stopping our drag
            dropZone[0].ondragend = function () {
                dropZone.removeClass('hover');
                return false;
            };




            // The drop event handles the file sending
            dropZone[0].ondrop = function(event) {
                // Stop the browser from opening the file in the window
                event.preventDefault();
                dropZone.removeClass('hover');

                // Get the file and the file reader
                var file = event.dataTransfer.files[0];

               @* if(file.size > @maxRequestLength {
                            dropZone.text('File Too Large!');
                        dropZone.addClass('error');
                        return false;*@
            //    // Validate file size
            //    if(file.size > <%=maxRequestLength%>) {
            //        dropZone.text('File Too Large!');
            //    dropZone.addClass('error');
            //    return false;
            //}

            // Send the file

            var xhr = new XMLHttpRequest();
        //    xhr.upload.addEventListener('progress', uploadProgress, false);
            xhr.onreadystatechange = stateChange;
            xhr.open('POST',' @Url.Action("HandleFileUpload","Images")', true);
            xhr.setRequestHeader('X-FILE-NAME', file.name);

            xhr.send(file);

            };

            


        });

        // Show the upload progress
        function uploadProgress(event) {
            var percent = parseInt(event.loaded / event.total * 100);
            $('#dropZone').text('Subiendo: ' + percent + '%');
        }

        // Show upload complete or upload failed depending on result
        function stateChange(event) {
            if (event.target.readyState == 4) {
                if (event.target.status == 200) {

                    //var xhr = event.target.xhr;
                    var response = $.parseJSON(this.responseText);

                    var path = response.path
                   // ![](http://)
                    var mdeVal = simplemde.value()
                    simplemde.value(mdeVal + "\n" + "![](" + path + ")")
                    //const $codemirror = $('.CodeMirror').nextAll('textarea');
                    //$codemirror.val("[](http://"+ path +")");

                    Materialize.toast('Archivo subido exitósamente!' + '<br />' + response.path, 4000)
                    
                }
                else {
                    dropZone.text('Ocurrio un fallo al subir el archivo!');
                    dropZone.addClass('error');
                }
            }
        }




        //$('#myEditor').markdownEditor({
        //    preview: true,
        //    onPreview: function (content, callback) {
        //        callback(content)
        //    }
        //});


        //$('[data-toggle="tooltip"]').tooltip();
    });

</script>