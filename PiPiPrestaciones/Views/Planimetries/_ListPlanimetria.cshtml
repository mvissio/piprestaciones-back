@model List<PiPiPrestaciones.Models.Planimetry>



@if (Model != null)
{

    <table class="table highlight">
        <tr>
            <th>
                Título de la planimetría
            </th>
            <th>
                Nota al pie
            </th>
            <th>
                Estado
            </th>
            <th>
                Acciones
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TitlePlanimetry)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FooterPlanimetry)
                </td>
                <td>

                    <div class="switch" onchange="changueStatus(@item.PlanimetryId, @item.AplicacionId)">
                        <label>
                            Deshabilitado
                            <input type="checkbox" checked="@item.Status">
                            <span class="lever"></span>
                            Habilitado
                        </label>
                    </div>
                </td>
                <td>
                    <div class="col l12">
                        <a class="btn-floating orange modal-trigger btn-prev-planimetry" title="Vista Previa" href="#prev-planimetry" data-urlImagePlanimetry="@item.UrlImagePlanimetry"> <i class="material-icons">remove_red_eye</i></a>
                        <a class="btn-floating red btn-delete-planimetry " onclick="removePlanimetry(@item.PlanimetryId, @item.AplicacionId) " title="Eliminar" id="btn-delete-planimetry"> <i class="material-icons">clear</i></a>
                    </div>
                </td>
            </tr>
        }
    </table>


}

<div id="prev-planimetry" class="modal">
    <img id="img-prev-planimetry" style="width: 100%; padding:1%; height: 85%;" />
    <div class="modal-footer">
        <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat ">Cerrar</a>
    </div>
</div>

<style>
    #prev-planimetry {
        display: none;
    }

    .modal {
        width: 50em !important;
        height: 30em !important;
    }
</style>


<script type="text/javascript">


    $(".btn-prev-planimetry").click(function () {
        var url = $(this).attr("data-urlImagePlanimetry")
        $("#img-prev-planimetry").attr("src", "../../" + url);

        $('#prev-planimetry').modal({
            dismissible: true, // Modal can be dismissed by clicking outside of the modal
            opacity: .5, // Opacity of modal background
            inDuration: 300, // Transition in duration
            outDuration: 200, // Transition out duration
            startingTop: '4%', // Starting top style attribute
            endingTop: '10%', // Ending top style attribute
            ready: function (modal, trigger) { // Callback for Modal open. Modal and trigger parameters available.

            },
            complete: function () { } // Callback for Modal close
        }
        );
    });

    function changueStatus(_idPlanimetry, _appId) {
        var data = {
            'planimetryId': _idPlanimetry,
            'appId': _appId
        };
         $.ajax({
                url: '@Url.Action("ChangePlanimetry", "Planimetries")',
                cache: false,
                data: data,
                    success: function (html) { $("#list-planimetry").html(html); }
                });
    }

    function removePlanimetry(_idPlanimetry, _appId) {
        var data = {
            'planimetryId': _idPlanimetry,
            'appId': _appId
        };
         $.ajax({
                url: '@Url.Action("RemovePlanimetry", "Planimetries")',
                cache: false,
                data: data,
                    success: function (html) { $("#list-planimetry").html(html); }
                });
    }


    $(document).ready(function () {
        $("#prev-planimetry").on("blur",function () {
            $(this).toggle("Highlight");
        })
    });

</script>